https://www.youtube.com/playlist?list=PL4cUxeGkcC9gfoKa5la9dsdCNpuey2s-V
https://github.com/iamshaunjp/JavaScript-DOM-Tutorial/tree/lesson-1

:\react\JavaScript-DOM-Tutorial>git init
Initialized empty Git repository in D:/react/JavaScript-DOM-Tutorial/.git/

D:\react\JavaScript-DOM-Tutorial>git remote add origin git@github.com:Annie-Huang/JavaScript-DOM-Tutorial.git

D:\react\JavaScript-DOM-Tutorial>git add .

D:\react\JavaScript-DOM-Tutorial>git commit
[master (root-commit) 6d64757] first commit
 3 files changed, 8 insertions(+)
 create mode 100644 .gitignore
 create mode 100644 Note.txt
 create mode 100644 annie.txt

D:\react\JavaScript-DOM-Tutorial>git push -u origin master

#################################################################################

Everything comes in the DOM is a node.
https://www.w3schools.com/jsref/prop_node_nodetype.asp
An element is a node:
        <div id="page-banner">
            <h1 class="title">Bookorama</h1>
            <p>Books for Ninjas</p>
            <form id="search-books">
                <input type="text" placeholder="Search books..." />
            </form>
        </div>
A text is a node (text node): Bookorama
A comment is a node: <!-- this is a comment -->
An attribute is a node: id="page-banner" inside a <div id="page-banner">


document.getElementById('page-banner')
document.getElementsByClassName('title');	<< return HTMLColletion
document.getElementsByTagName('li')		<< return HTMLColletion


Array.from(titles).forEach(function(item){	<< HTMLCollection has to turn into array before looping
   console.log(item);
});


document.querySelector('#book-list li:nth-child(2) .name');	
document.querySelectorAll('#book-list li .name');		<< return NodeList, can loop through

books.forEach(function (book) {
    console.log(book);
});


titles[0]
book.textContent
book.textContent = 'text';		<< change it
book.textContent += ' (booktitle)';	<< append it
bookList.innerHTML
bookList.innerHTML = '<h2>Books and more books...</h2>';

const banner = document.querySelector('#page-banner');
banner.nodeType		<< return 1, Element
banner.nodeName		<< return div
banner.hasChildNodes()	<< return true
banner.cloneNode(true);	<< clone node with its child














